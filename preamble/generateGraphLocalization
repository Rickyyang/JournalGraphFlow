#!/usr/bin/env python
# Note: in the list of node and edge quantities: first element is the name to use in the command name,
# the second is the one to use in the definition

import os
f=open('graphLocalization.tex','w')

f.write('% This file was generated by the script'+os.path.basename(__file__)+'\n')
f.write('% Do not modify this file directly\n\n')

f.write('% Notation for nodes\n')
nodeIndexList=['i','j']
nodeStateDoubleList=[['R','R'],['T','T']]
for index in nodeIndexList:
    for state in nodeStateDoubleList:
        f.write('\\newcommand{\\'+state[0]+index+'}{'+state[1]+'_{'+index+'}}\n')
        f.write('\\newcommand{\\d'+state[0]+index+'}{\\dot{'+state[1]+'}_{'+index+'}}\n')
        f.write('\\newcommand{\\dd'+state[0]+index+'}{\\ddot{'+state[1]+'}_{'+index+'}}\n')
    f.write('\n')
f.write('\n')

edgeIndexList=['ij','ji']
edgeStateDoubleList=[['R','R'],['T','T'],['beta','\\beta'],['c','c'],['d','d'],['q','q'],['l','\\lambda'],['varphi','\\varphi'],['g','g']]

f.write('% Notation for edges\n')
for index in edgeIndexList:
    for state in edgeStateDoubleList:
        f.write('\\newcommand{\\'+state[0]+index+'}{'+state[1]+'_{'+index+'}}\n')
    f.write('\n')
f.write('\n')

f.write('% Notation for edges, measured quantities\n')
for index in edgeIndexList:
    for state in edgeStateDoubleList:
        f.write('\\newcommand{\\t'+state[0]+index+'}{\\tilde{'+state[1]+'}_{'+index+'}}\n')
        f.write('\\newcommand{\\dt'+state[0]+index+'}{\\dot{\\tilde{'+state[1]+'}}_{'+index+'}}\n')
    f.write('\n')
f.write('\n')

f.write('% Node state differences\n')
f.write('\\newcommand{\\xjmi}{x_j-x_i}\n')
f.write('\\newcommand{\\vjmi}{v_j-v_i}\n')
f.write('\\newcommand{\\nxjmi}{\\norm{\\xjmi}}\n')
f.write('\n')

f.write('% Notation for desired quantities\n')
quantityTripleList=[['x','x','i'],['x','x','j'],['beta','\\beta','ij'],['d','d','ij']]
for quantity in quantityTripleList:
    f.write('\\newcommand{\\'+quantity[0]+'g'+quantity[2]+'}{'+quantity[1]+'_{g,'+quantity[2]+'}}\n')

f.close()






        
